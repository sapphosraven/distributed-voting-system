version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: voting_postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: voting_db
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d voting_db"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: redis
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  backend1:
    build: ./backend
    ports:
      - "5000:5000"
    environment:
      PORT: 5000
      REDIS_HOST: redis # Matches Redis service name
      REDIS_PORT: 6379
      DATABASE_URL: postgres://user:password@postgres:5432/voting_db
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend
    volumes:
      - ./secrets/private.pem:/secrets/private.pem
      - ./secrets/public.pem:/secrets/public.pem

  backend2:
    build: ./backend
    ports:
      - "5001:5001"
    environment:
      PORT: 5001
      REDIS_HOST: redis # Matches Redis service name
      REDIS_PORT: 6379
      DATABASE_URL: postgres://user:password@postgres:5432/voting_db
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend
    volumes:
      - ./secrets/private.pem:/secrets/private.pem
      - ./secrets/public.pem:/secrets/public.pem

networks:
  backend:

volumes:
  postgres_data:
  redis_data:
